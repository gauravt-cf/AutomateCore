# 🚀 GitHub Actions: Deploy static content from 'website/' to GitHub Pages
name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]

  workflow_dispatch:
    inputs:
      target_env:
        description: 'Select environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - development
          - staging
          - production

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.event.inputs.target_env || 'staging' }}"
  cancel-in-progress: false

jobs:
  deploy:
    name: 📦 Deploy to GitHub Pages (${{ github.event.inputs.target_env || 'staging' }})
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.target_env || 'staging' }}
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 🛠 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install Build Tools
        run: |
          npm install -g javascript-obfuscator html-minifier-terser clean-css-cli terser

      - name: 🧾 Backup Original Files
        run: |
          mkdir -p website/_originals
          find website/ -type f \( -name "*.js" -o -name "*.css" -o -name "*.html" \) -exec cp --parents {} website/_originals/ \;

      - name: 🧪 Obfuscate JS in /website/scripts
        run: |
          if [ -d "website/scripts" ]; then
            javascript-obfuscator website/scripts --output website/scripts-obfuscated \
              --compact true --self-defending true
            rm -rf website/scripts
            mv website/scripts-obfuscated website/scripts
          fi

      - name: ✂️ Minify HTML Files
        run: |
          find website/ -name '*.html' -exec html-minifier-terser \
            --collapse-whitespace --remove-comments --minify-css true --minify-js true \
            -o {} {} \;

      - name: ✂️ Minify CSS Files
        run: |
          find website/ -name '*.css' -exec cleancss -o {} {} \;

      - name: ✂️ Minify Remaining JS Files (not already obfuscated)
        run: |
          find website/ -name '*.js' ! -path '*/scripts/*' -exec terser {} -c -m -o {} \;

      - name: 🧹 Clean Up Sensitive/Dev Files
        run: |
          find website/ -name '*.map' -delete
          rm -f website/.env website/README.md
      
      - name: 📛 Disable Jekyll
          run: |
            touch website/.nojekyll
        
        
      - name: ⚙️ Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: 🏗️ Build Environment Subfolder
        run: |
          mkdir -p website/${{ github.event.inputs.target_env }}
          rsync -av --exclude='development' --exclude='staging' --exclude='production' \
                --exclude='downloads' --exclude='${{ github.event.inputs.target_env }}' \
                website/ website/${{ github.event.inputs.target_env }}/

      - name: 📄 Upload Static Files
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website

      - name: 🚀 Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

      - name: ✅ Deployment Complete
        run: echo "Deployment to ${{ github.event.inputs.target_env || 'staging' }} complete at ${{ steps.deploy.outputs.page_url }}"
      
